- name: make sure the file exists
  stat:
    path: "{{ systemd_path }}/{{ systemd_depended_service_name }}"
  register: systemd_file_info

- name: fail when file not exists
  fail:
    msg: "the {{ systemd_path }}/{{ systemd_depended_service_name }} does not exists"
  when: not systemd_file_info.stat.exists

- name: get the parameters After and Requires values in the Unit block on service file
  command: >
         awk -F ' *= *' '{ if ($1 ~ /^\[/) section=$1;
         else if ($1 ~ /^{{ item }}/ && section ~ /^\[Unit\]$/ ) print $2 }'
         "{{ systemd_path }}/{{ systemd_depended_service_name }}"
  register: Unit_params
  loop: [ After, Requires ]

- name: setting the new value for the parameters given
  ini_file:
    create: no
    path: "{{ systemd_path }}/{{ systemd_depended_service_name }}"
    section: Unit
    option: "{{ item.item }}"
    no_extra_spaces: yes
    value: "{{ systemd_independ_file_name + ' ' + item.stdout }}"
  when: systemd_independ_file_name not in item.stdout.split('#')[0]
  notify: reload systemd
  loop: "{{ Unit_params.results }}"
  loop_control:
    label: "{{ { \"parameter\": item.item, \"old_value\": item.stdout } }}"

